/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.DropXlsx;
import Controlador.ManejadorFechas;
import Modelo.Almacen;
import Modelo.Conteo;
import Modelo.ConteoProducto;
import Modelo.Medida;
import Modelo.MySQLDAO.AlmacenDAO;
import Modelo.MySQLDAO.Conexion;
import Modelo.MySQLDAO.ConteoDAO;
import Modelo.MySQLDAO.ConteoProductoDAO;
import Modelo.MySQLDAO.MedidaDAO;
import Modelo.MySQLDAO.PresentacionDAO;
import Modelo.MySQLDAO.UsuarioDAO;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GROVER
 */
public class InventarioInicial extends javax.swing.JFrame {

    String usuario;
    DefaultTableModel modelo;
    ManejadorFechas mf = new ManejadorFechas();

    public InventarioInicial(String user, String storage) {
        initComponents();
        setLocationRelativeTo(null);

        this.usuario = user;
        lblUsuario.setText(usuario);
        lblAlmacen.setText(storage);

        DropXlsx dropXlsx = new DropXlsx();
        dropXlsx.setJtable(tblConteo);
        titulos();
        cargarComboAlmacen();
        lblFecha.setText(mf.getFechaActual());
    }

    public InventarioInicial() {
    }

    private void cargarComboAlmacen() {
        try {
            AlmacenDAO adao = new AlmacenDAO();
            for (Almacen a : adao.listar()) {
                cmbAlmacen.addItem(a);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(getRootPane(), "ERROR: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblConteo = new javax.swing.JTable();
        lblAlmacen = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        cmbAlmacen = new javax.swing.JComboBox<>();
        btnMostrar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblConteo = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tblConteo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblConteo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConteoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblConteo);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 720, 440));

        lblAlmacen.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblAlmacen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAlmacen.setText(".........");
        getContentPane().add(lblAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 160, -1));

        lblUsuario.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblUsuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUsuario.setText("user");
        getContentPane().add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 140, 30));

        lblFecha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFecha.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFecha.setText("date");
        getContentPane().add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 670, 140, 30));

        btnVolver.setBackground(new java.awt.Color(102, 102, 102));
        btnVolver.setFont(new java.awt.Font("Microsoft Yi Baiti", 0, 18)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("VOLVER");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 670, 190, 30));

        btnGuardar.setBackground(new java.awt.Color(255, 153, 153));
        btnGuardar.setFont(new java.awt.Font("Microsoft Yi Baiti", 0, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(51, 51, 51));
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 620, 190, 30));

        cmbAlmacen.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        getContentPane().add(cmbAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 280, -1));

        btnMostrar.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnMostrar.setText("MOSTRAR");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 120, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 660, 730, 10));

        jLabel2.setText("PRODUCTO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, -1, 20));

        txtProducto.setEditable(false);
        getContentPane().add(txtProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, 420, -1));

        jLabel3.setText("CANTIDAD");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 550, -1, 20));

        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        getContentPane().add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, 80, -1));

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        getContentPane().add(btnOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 550, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("INVENTARIO INICIAL - BARMAN");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 210, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ALMACEN");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 80, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        try {
            VistaRequerimientoBarman vrb = new VistaRequerimientoBarman(usuario,lblAlmacen.getText());
            vrb.setVisible(true);
            dispose();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarConteo();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        LimpiarTabla(tblConteo, modelo);

        Almacen a = (Almacen) cmbAlmacen.getSelectedItem();
        try {
            cargarTabla(a.getId(), "");
        } catch (SQLException ex) {
            Logger.getLogger(InventarioInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void tblConteoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConteoMouseClicked
        int fila = tblConteo.getSelectedRow();
        String producto = tblConteo.getValueAt(fila, 1).toString() + " - " + tblConteo.getValueAt(fila, 2).toString();
        txtProducto.setText(producto);
    }//GEN-LAST:event_tblConteoMouseClicked

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        int fila = tblConteo.getSelectedRow();
        if (fila >= 0) {
            tblConteo.setValueAt(txtCantidad.getText(), fila, 4);
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(getRootPane(), "SELECCIONE UN PRODUCTO");
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        btnOk.doClick();
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void limpiarCampos() {
        tblConteo.clearSelection();
        txtProducto.setText("");
        txtCantidad.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventarioInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventarioInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventarioInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventarioInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventarioInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnOk;
    public javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<Almacen> cmbAlmacen;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAlmacen;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblConteo;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtProducto;
    // End of variables declaration//GEN-END:variables

    private void titulos() {
        String titulos[] = {"COD", "PRODUCTO", "PRESENTACION", "MEDIDA", "CANTIDAD"};
        modelo = new DefaultTableModel(null, titulos);
        tblConteo.setModel(modelo);
    }

    private void cargarTabla(int idAlmacen, String nomProd) throws SQLException {
        Conexion con = new Conexion();

        try {
            con.conectar();
//            String sql = "SELECT productopresentacion.idproductopresentacion, producto.nombre,presentacion.descripcion \n"
//                    + "FROM producto\n"
//                    + "INNER JOIN productopresentacion ON producto.idproducto = productopresentacion.idproducto\n"
//                    + "INNER JOIN categoria ON productopresentacion.idcategoria = categoria.idcategoria\n"
//                    + "INNER JOIN presentacion ON productopresentacion.idpresentacion = presentacion.idpresentacion\n"
//                    + "WHERE productopresentacion.idalmacen = " + idAlmacen + " AND producto.nombre LIKE '%" + nomProd + "%'";
            String sql = "SELECT productopresentacion.idproductopresentacion, producto.nombre,presentacion.descripcion\n"
                    + "FROM producto\n"
                    + "INNER JOIN productopresentacion ON producto.idproducto = productopresentacion.idproducto\n"
                    + "INNER JOIN categoria ON productopresentacion.idcategoria = categoria.idcategoria\n"
                    + "INNER JOIN presentacion ON productopresentacion.idpresentacion = presentacion.idpresentacion\n"
                    + "WHERE productopresentacion.idalmacen = " + idAlmacen + " AND producto.nombre LIKE '%" + nomProd + "%'\n"
                    + "order by presentacion.descripcion desc";

            PreparedStatement pst = con.getConexion().prepareStatement(sql);

            ResultSet res = pst.executeQuery();

            Object datos[] = new Object[5];

            while (res.next()) {
                datos[0] = res.getInt(1);
                datos[1] = res.getString(2);
                datos[2] = res.getString(3);
                datos[3] = "UNIDAD";
                datos[4] = 0;
                modelo.addRow(datos);
            }

            tblConteo.setModel(modelo);
            pst.close();
            res.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(getRootPane(), "ERROR: " + e);
        } finally {
            con.cerrar();
        }
    }

    private boolean guardarConteo() {
        try {

            if (tblConteo.getRowCount() > 0) {
                //validar si ya se realizo la cuenta
                int opc = JOptionPane.showConfirmDialog(null, "¿DESEA GUARDAR LA LISTA?", "GUARDAR CONTEO " + new ManejadorFechas().getFechaActual(), JOptionPane.YES_NO_OPTION);
                if (opc == 0) { //verdadero
                    int contador = 0;
                    try {
                        //registrar inventario
                        
                        
                        //primero registrar el conteo
                        Conteo c = new Conteo();
                        UsuarioDAO udao = new UsuarioDAO();
                        int idUsuario = udao.getIdUsuario(lblUsuario.getText());
                        Almacen a = new AlmacenDAO().Obtener(cmbAlmacen.getSelectedItem().toString());
                        c.setIdusuario(idUsuario);
                        c.setIdAlmacen(a.getId());
                        c.setFecha(new ManejadorFechas().getFechaActualMySQL());
                        c.setHora(new ManejadorFechas().getHoraActual());

                        ConteoDAO cdao = new ConteoDAO();

                        if (cdao.Registrar(c)) {
                            int idConteo = cdao.getLastId();
                            Medida m = new MedidaDAO().Obtener(1);
                            ConteoProductoDAO cpdao = new ConteoProductoDAO();
                            for (int i = 0; i < tblConteo.getRowCount(); i++) {
                                ConteoProducto cp = new ConteoProducto();
                                cp.setIdconteo(idConteo);
                                cp.setIdProductoPresentacion(Integer.parseInt(tblConteo.getValueAt(i, 0).toString()));
                                cp.setIdPresentacion(new PresentacionDAO().getIdPresentacion(tblConteo.getValueAt(i, 2).toString()));
                                cp.setMedida(m);
                                cp.setStock(Integer.parseInt(tblConteo.getValueAt(i, 4).toString()));
                                if (cpdao.Registrar(cp)) {
                                    contador++;
                                }
                            }
                        }

                        if (contador > 0) {
                            JOptionPane.showMessageDialog(getRootPane(), "SE REGISTRO EL CONTEO EXITOSAMENTE");
//                            parametros.put("fecha", cd.lblFecha.getText());
//                            mrv = new MyiReportVisor(System.getProperty("user.dir") + "\\reportes\\InventarioInicial.jrxml", parametros, new ColumnasTablas().getPageSize(cd.tblContados));
//                            mrv.setNombreArchivo("Conteo" + cd.lblFecha.getText());
//                            mrv.exportarAPdf();
//                            mrv.dispose();
                        }
                    } catch (Exception ex) {
                        System.out.println(ex.getMessage());
                    }
                } else {//falso
                }
            } else {
                JOptionPane.showMessageDialog(getRootPane(), "NO SE PUEDE REGISTRAR UN CONTEO VACIO, INGRESE PRODUCTOS CONTADOS");
            }

            for (int i = 0; i < tblConteo.getRowCount(); i++) {

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(getRootPane(), "ERROR: " + e.getMessage());
        }
        return false;
    }

    private void LimpiarTabla(JTable tabla, DefaultTableModel modelo) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }

}
